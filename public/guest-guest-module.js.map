{"version":3,"sources":["./src/app/poker/guest/guest-routing.module.ts","./src/app/poker/guest/game/game.guard.ts","./src/app/poker/guest/game/game.resolver.ts","./src/app/poker/guest/guest.module.ts","./src/app/poker/guest/your-name/your-name.guard.ts","./src/app/poker/guest/room-code/room-code.guard.ts","./src/app/poker/guest/game/game.component.ts","./src/app/poker/guest/game/game.component.html","./src/app/poker/guest/your-name/your-name.component.ts","./src/app/poker/guest/your-name/your-name.component.html","./src/app/poker/guest/guest.service.ts","./src/app/poker/guest/room-code/room-code.component.ts","./src/app/poker/guest/room-code/room-code.component.html"],"names":[],"mappings":"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","file":"guest-guest-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GameComponent } from './game/game.component';\nimport { GameGuard } from './game/game.guard';\nimport { GameResolver } from './game/game.resolver';\nimport { RoomCodeComponent } from './room-code/room-code.component';\nimport { RoomCodeGuard } from './room-code/room-code.guard';\nimport { YourNameComponent } from './your-name/your-name.component';\nimport { YourNameGuard } from './your-name/your-name.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'room-code'\n  },\n  {\n    path: 'room-code',\n    component: RoomCodeComponent,\n    canActivate: [\n      RoomCodeGuard\n    ]\n  },\n  {\n    path: 'your-name',\n    component: YourNameComponent,\n    canActivate: [\n      YourNameGuard\n    ]\n  },\n  {\n    path: 'game',\n    component: GameComponent,\n    canActivate: [\n      GameGuard\n    ],\n    resolve: {\n      data: GameResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GuestRoutingModule {\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { GuestService } from '../guest.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameGuard implements CanActivate {\n\n  constructor(private readonly guestService: GuestService,\n              private router: Router) {\n  }\n\n  canActivate(): boolean {\n    const valid: boolean = !!this.guestService.roomId;\n\n    if (!valid) {\n      this.router.navigateByUrl('/');\n    }\n\n    return valid;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { RoomInfoInterface } from '@planning-poker/api-interfaces';\nimport { Observable } from 'rxjs';\nimport { GuestService } from '../guest.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameResolver implements Resolve<RoomInfoInterface> {\n\n  constructor(private guestService: GuestService) {\n  }\n\n  resolve(): Observable<RoomInfoInterface> {\n    return this.guestService.getRoomInfo();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { GuestRoutingModule } from './guest-routing.module';\nimport { RoomCodeComponent } from './room-code/room-code.component';\nimport { YourNameComponent } from './your-name/your-name.component';\nimport { GameComponent } from './game/game.component';\n\n\n@NgModule({\n  declarations: [RoomCodeComponent, YourNameComponent, GameComponent],\n  imports: [\n    CommonModule,\n    GuestRoutingModule,\n    SharedModule,\n    ReactiveFormsModule\n  ]\n})\nexport class GuestModule {\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { GuestService } from '../guest.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YourNameGuard implements CanActivate {\n\n  constructor(private readonly guestService: GuestService,\n              private router: Router) {\n  }\n\n  canActivate(): boolean {\n    const valid: boolean = !!this.guestService.roomId;\n\n    if (!valid) {\n      this.router.navigateByUrl('/');\n    }\n\n    return valid;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { GuestService } from '../guest.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomCodeGuard implements CanActivate {\n\n  constructor(private readonly guestService: GuestService,\n              private router: Router) {\n  }\n\n  canActivate(): boolean {\n    const valid: boolean = !this.guestService.roomId;\n\n    if (!valid) {\n      this.router.navigateByUrl('/');\n    }\n\n    return valid;\n  }\n}\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cards, GameStateBroadcastDto, GameStates, RoomInfoInterface } from '@planning-poker/api-interfaces';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { GuestService } from '../guest.service';\n\n@Component({\n  selector: 'planning-poker-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit, OnDestroy {\n\n  public inReview = false;\n  public selectedCard$: Observable<Cards>;\n  public cards: Cards[] = [\n    Cards.ZERO,\n    Cards.HALF,\n    Cards.ONE,\n    Cards.TWO,\n    Cards.THREE,\n    Cards.FIVE,\n    Cards.EIGHT,\n    Cards.THIRTEEN,\n    Cards.TWENTY,\n    Cards.FORTY,\n    Cards.HUNDRED,\n    Cards.QUESTION_MARK,\n    Cards.COFFEE,\n    Cards.INFINITE\n  ];\n  private selectedCardValueSubject$: BehaviorSubject<Cards> = new BehaviorSubject<Cards>(null);\n  private destroySubject$: Subject<null> = new Subject<null>();\n\n  constructor(private guestService: GuestService,\n              private changeDetectorRef: ChangeDetectorRef,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private $gaService: GoogleAnalyticsService) {\n    this.selectedCard$ = this.selectedCardValueSubject$.asObservable();\n  }\n\n  public ngOnInit(): void {\n    this.$gaService.pageView('/game');\n\n    const roomInfo: RoomInfoInterface = this.activatedRoute.snapshot.data.data;\n    this.inReview = roomInfo.state === GameStates.REVIEW;\n\n    this.guestService.getGameState()\n      .pipe(\n        takeUntil(this.destroySubject$)\n      )\n      .subscribe((gameState: GameStateBroadcastDto) => this.handleGameState(gameState));\n\n    this.guestService.onRoomRemove()\n      .pipe(\n        takeUntil(this.destroySubject$)\n      )\n      .subscribe(() => this.handleRoomRemove());\n  }\n\n  public ngOnDestroy(): void {\n    this.destroySubject$.next(null);\n  }\n\n  public set selectedCard(value: Cards) {\n    if (this.inReview) {\n      return;\n    }\n\n    this.selectedCardValueSubject$.next(value);\n    this.guestService.sendCard(value);\n  }\n\n  public onCardClick(card: Cards): void {\n    this.$gaService.event('user_voted', 'guest', 'User voted');\n    this.selectedCard = card;\n  }\n\n  private handleGameState(gameState: GameStateBroadcastDto): void {\n    this.inReview = gameState.state === GameStates.REVIEW;\n\n    if (gameState.state === GameStates.IN_PROGRESS) {\n      this.selectedCardValueSubject$.next(null);\n      this.changeDetectorRef.detectChanges();\n    }\n  }\n\n  private handleRoomRemove(): void {\n    this.router.navigateByUrl('/');\n  }\n}\n","<div class=\"cards\">\n  <ng-container *ngFor=\"let card of cards\">\n    <planning-poker-card [card]=\"card\"\n                         [selected$]=\"selectedCard$\"\n                         (cardClick)=\"onCardClick(card)\"></planning-poker-card>\n  </ng-container>\n</div>\n\n<div class=\"sidebar\">\n  TODO :)\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { GuestService } from '../guest.service';\n\n@Component({\n  selector: 'planning-poker-your-name',\n  templateUrl: './your-name.component.html',\n  styleUrls: ['./your-name.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YourNameComponent implements OnInit {\n\n  public formGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n              private guestService: GuestService,\n              private router: Router,\n              private $gaService: GoogleAnalyticsService) {\n  }\n\n  public ngOnInit(): void {\n    this.$gaService.pageView('/your-name');\n\n    this.formGroup = this.formBuilder.group({\n      name: this.formBuilder.control(null, [Validators.required])\n    });\n  }\n\n  public get nameFormControl(): FormControl {\n    return this.formGroup.get('name') as FormControl;\n  }\n\n  public submit(): void {\n    if (this.formGroup.valid) {\n      this.guestService.joinRoom(this.nameFormControl.value);\n      this.router.navigateByUrl('/guest/game');\n    }\n  }\n}\n","<planning-poker-layout>\n  <planning-poker-header>\n    <h1>Introduce yourself</h1>\n  </planning-poker-header>\n\n  <planning-poker-content>\n    <planning-poker-form-container>\n      <form [formGroup]=\"formGroup\">\n        <input type=\"text\"\n               formControlName=\"name\"\n               planningPokerFocus\n               planningPokerInput>\n        <button planningPokerButton\n                (click)=\"submit()\">\n          <planning-poker-icon>\n            arrow_forward\n          </planning-poker-icon>\n        </button>\n      </form>\n    </planning-poker-form-container>\n  </planning-poker-content>\n</planning-poker-layout>\n","import { Injectable } from '@angular/core';\nimport {\n  Cards,\n  ClientType,\n  GameStateBroadcastDto,\n  JoinRoomCodeResponseDto,\n  RoomInfoInterface\n} from '@planning-poker/api-interfaces';\nimport { Observable } from 'rxjs';\nimport { delay, tap } from 'rxjs/operators';\nimport { PokerService } from '../services/poker.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestService {\n\n  public roomId: string;\n\n  constructor(private pokerService: PokerService) {\n  }\n\n  public checkCode(code: string): Observable<JoinRoomCodeResponseDto> {\n    return this.pokerService.checkRoomCode(code)\n      .pipe(\n        delay(1500),\n        tap((response: JoinRoomCodeResponseDto) => {\n          if (response.valid) {\n            this.roomId = code;\n          }\n        })\n      );\n  }\n\n  public sendCard(card: Cards): void {\n    this.pokerService.sendVote({\n      card,\n      room: this.roomId\n    });\n  }\n\n  public getGameState(): Observable<GameStateBroadcastDto> {\n    return this.pokerService.receiveGameState();\n  }\n\n  public joinRoom(name: string): void {\n    this.pokerService.joinRoom(this.roomId, ClientType.VOTER, name);\n  }\n\n  public getRoomInfo(): Observable<RoomInfoInterface> {\n    return this.pokerService.getRoomInfo(this.roomId);\n  }\n\n  public onRoomRemove(): Observable<null> {\n    return this.pokerService.onRoomRemove();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JoinRoomCodeResponseDto } from '@planning-poker/api-interfaces';\nimport { CodeComponent } from '@shared/form/code/code.component';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { delay, finalize, takeUntil, tap } from 'rxjs/operators';\nimport { GuestService } from '../guest.service';\n\n@Component({\n  selector: 'planning-poker-room-code',\n  templateUrl: './room-code.component.html',\n  styleUrls: ['./room-code.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RoomCodeComponent implements OnInit, OnDestroy {\n\n  @ViewChild(CodeComponent) public codeComponent: CodeComponent;\n  public loading$: Observable<boolean>;\n  public success$: Observable<boolean>;\n  public error$: Observable<boolean>;\n  private loadingSubject$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  private successSubject$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  private errorSubject$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  private destroySubject$: Subject<null> = new Subject<null>();\n\n  constructor(private router: Router,\n              private guestService: GuestService,\n              private $gaService: GoogleAnalyticsService) {\n    this.loading$ = this.loadingSubject$.asObservable();\n    this.success$ = this.successSubject$.asObservable();\n    this.error$ = this.errorSubject$.asObservable();\n  }\n\n  public ngOnInit(): void {\n    this.$gaService.pageView('/room-code');\n  }\n\n  public ngOnDestroy(): void {\n    this.destroySubject$.next(null);\n  }\n\n  public onCodeSubmit(code: string) {\n    if (this.loadingSubject$.getValue()) {\n      return;\n    }\n\n    this.loadingSubject$.next(true);\n\n    this.guestService.checkCode(code)\n      .pipe(\n        takeUntil(this.destroySubject$),\n        finalize(() => this.loadingSubject$.next(false)),\n        tap((response: JoinRoomCodeResponseDto) => {\n          this.loadingSubject$.next(false);\n\n          if (response.valid) {\n            this.successSubject$.next(true);\n          } else {\n            this.errorSubject$.next(true);\n          }\n        }),\n        delay(1000),\n        tap(() => this.errorSubject$.next(false))\n      )\n      .subscribe((response: JoinRoomCodeResponseDto) => {\n        if (response.valid) {\n          this.router.navigateByUrl('/guest/your-name');\n          this.$gaService.event('code_enter_valid', 'guest', 'Enter code valid');\n        } else {\n          this.codeComponent.reset();\n          this.$gaService.event('code_enter_invalid', 'guest', 'Enter code invalid');\n        }\n      });\n  }\n}\n","<planning-poker-layout>\n  <planning-poker-header>\n    <h1>Join to exsiting room</h1>\n  </planning-poker-header>\n\n  <planning-poker-content>\n    <planning-poker-code [codeLength]=\"5\"\n                         [isLoading$]=\"loading$\"\n                         [isSuccess$]=\"success$\"\n                         [isError$]=\"error$\"\n                         (codeSubmit)=\"onCodeSubmit($event)\"></planning-poker-code>\n  </planning-poker-content>\n</planning-poker-layout>\n"],"sourceRoot":"webpack:///"}