{"version":3,"sources":["./src/app/poker/services/poker.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACP;AAcH;AACD;;;;AAMhC,MAAM,YAAY;IAEvB,YAAoB,MAAc,EACd,UAAsB;QADtB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAoB,kBAAkB,EAAE;YAC3C,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;SAClC,CAAC,CAAC;IACP,CAAC;IAEM,QAAQ,CAAC,IAAU;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2EAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAEM,eAAe,CAAC,KAAiB;QACtC,MAAM,YAAY,GAAU;YAC1B,KAAK;SACN,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2EAAY,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IACrD,CAAC;IAEM,eAAe,CAAC,MAAc;QACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2EAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,2EAAY,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,2EAAY,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,2EAAY,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEM,QAAQ,CAAC,IAAY,EAAE,IAAgB,EAAE,IAAa;QAC3D,MAAM,OAAO,GAAmB;YAC9B,IAAI;YACJ,IAAI;YACJ,IAAI;SACL,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2EAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/C,CAAC;IAEM,aAAa,CAAC,IAAY;QAC/B,MAAM,OAAO,GAA2B;YACtC,EAAE,EAAE,IAAI;SACT,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAA0B,qBAAqB,EAAE,OAAO,CAAC,CAAC;IACvF,CAAC;IAEM,WAAW,CAAC,IAAY;QAC7B,MAAM,OAAO,GAA2B;YACtC,EAAE,EAAE,IAAI;SACT,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAoB,gBAAgB,EAAE,OAAO,CAAC,CAAC;IAC5E,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,2EAAY,CAAC,YAAY,CAAC,CAAC;IAC1D,CAAC;;wEApEU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ClientType,\n  GameStateBroadcastDto,\n  GameStates,\n  JoinRequestDto,\n  JoinRoomCodeRequestDto,\n  JoinRoomCodeResponseDto,\n  RoomInfoInterface,\n  SocketEvents,\n  State,\n  UsersResponseDto,\n  Vote,\n  Voted\n} from '@planning-poker/api-interfaces';\nimport { Socket } from 'ngx-socket-io';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokerService {\n\n  constructor(private socket: Socket,\n              private httpClient: HttpClient) {\n  }\n\n  public createRoom(): Observable<RoomInfoInterface> {\n    return this.httpClient\n      .post<RoomInfoInterface>('/api/create-room', {\n        clientId: this.socket.ioSocket.id\n      });\n  }\n\n  public sendVote(vote: Vote): void {\n    this.socket.emit(SocketEvents.VOTE, vote);\n  }\n\n  public changeGameState(state: GameStates): void {\n    const stateMessage: State = {\n      state\n    };\n\n    this.socket.emit(SocketEvents.STATE, stateMessage);\n  }\n\n  public toggleGameState(roomId: string): void {\n    this.socket.emit(SocketEvents.STATE, roomId);\n  }\n\n  public receiveVote(): Observable<Voted> {\n    return this.socket.fromEvent(SocketEvents.VOTED);\n  }\n\n  public receiveGameState(): Observable<GameStateBroadcastDto> {\n    return this.socket.fromEvent(SocketEvents.STATE);\n  }\n\n  public getUsers(): Observable<UsersResponseDto> {\n    return this.socket.fromEvent(SocketEvents.USERS);\n  }\n\n  public joinRoom(room: string, type: ClientType, name?: string): void {\n    const request: JoinRequestDto = {\n      name,\n      room,\n      type\n    };\n    this.socket.emit(SocketEvents.JOIN, request);\n  }\n\n  public checkRoomCode(code: string): Observable<JoinRoomCodeResponseDto> {\n    const request: JoinRoomCodeRequestDto = {\n      id: code\n    };\n\n    return this.httpClient.post<JoinRoomCodeResponseDto>('/api/join-room-code', request);\n  }\n\n  public getRoomInfo(code: string): Observable<RoomInfoInterface> {\n    const request: JoinRoomCodeRequestDto = {\n      id: code\n    };\n\n    return this.httpClient.post<RoomInfoInterface>('/api/room-info', request);\n  }\n\n  public onRoomRemove(): Observable<null> {\n    return this.socket.fromEvent(SocketEvents.ROOM_REMOVED);\n  }\n}\n"],"sourceRoot":"webpack:///"}