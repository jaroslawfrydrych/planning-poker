{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///./libs/api-interfaces/src/index.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"socket.io\"","webpack:///external \"@nestjs/websockets\"","webpack:///./apps/api/src/app/poker/poker.service.ts","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\"","webpack:///./libs/api-interfaces/src/lib/enum/cards.enum.ts","webpack:///./libs/api-interfaces/src/lib/enum/game-states.enum.ts","webpack:///./libs/api-interfaces/src/lib/enum/socket.events.ts","webpack:///./libs/api-interfaces/src/lib/enum/player-statuses.enum.ts","webpack:///./libs/api-interfaces/src/lib/enum/player-type.enum.ts","webpack:///external \"@nestjs/core\"","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/poker/poker.module.ts","webpack:///./apps/api/src/app/poker/poker.controller.ts","webpack:///./apps/api/src/app/poker/room.ts","webpack:///./apps/api/src/app/poker/poker.gateway.ts","webpack:///./apps/api/src/frontend-redirect.ts","webpack:///external \"path\"","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","module.exports = require(\"tslib\");","/**\n * Model\n */\nexport * from './lib/model/app-info-dto.interface';\nexport * from './lib/model/vote.interface';\nexport * from './lib/model/state.interface';\nexport * from './lib/model/room.info';\nexport * from './lib/model/player.interface';\nexport * from './lib/model/create-room-dto.interface';\nexport * from './lib/model/game-state-dto.interface';\nexport * from './lib/model/game-state-broadcast-dto.interface';\nexport * from './lib/model/join-room-code-request-dto.interface';\nexport * from './lib/model/join-room-code-response-dto.interface';\nexport * from './lib/model/join-room-name-request-dto.interface';\nexport * from './lib/model/join-request-dto.interface';\nexport * from './lib/model/results-dto.interface';\nexport * from './lib/model/result.interface';\nexport * from './lib/model/users-response-dto.interface';\nexport * from './lib/model/voted.interface';\n\n/**\n * Enum\n */\nexport * from './lib/enum/cards.enum';\nexport * from './lib/enum/game-states.enum';\nexport * from './lib/enum/socket.events';\nexport * from './lib/enum/player-statuses.enum';\nexport * from './lib/enum/player-type.enum';\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"socket.io\");","module.exports = require(\"@nestjs/websockets\");","import { Injectable } from '@nestjs/common';\n\nimport { GameStates, Player, PlayerStatuses } from '@planning-poker/api-interfaces';\n\nimport { Room } from './room';\n\n@Injectable()\nexport class PokerService {\n  public rooms: Map<string, Room> = new Map<string, Room>();\n  public players: Map<string, Player> = new Map<string, Player>();\n\n  public toggleGameState(currentState: GameStates): GameStates {\n    switch (currentState) {\n      case GameStates.IN_PROGRESS:\n        return GameStates.REVIEW;\n\n      case GameStates.REVIEW:\n        return GameStates.IN_PROGRESS;\n    }\n  }\n\n  public toggleRoomGameState(roomNumber: string): void {\n    const room: Room = this.rooms.get(roomNumber);\n\n    if (!room) {\n      return;\n    }\n\n    room.state = this.toggleGameState(room.state);\n    this.rooms.set(roomNumber, room);\n  }\n\n  public getRoomGameState(roomNumber: string): GameStates {\n    const room: Room = this.rooms.get(roomNumber);\n    return room.state;\n  }\n\n  public createRoom(): Room {\n    const room = new Room();\n\n    if (this.checkIsRoomExists(room.id)) {\n      while (!this.checkIsRoomExists(room.id)) {\n        room.generateRoomNumber();\n      }\n    }\n\n    this.rooms.set(room.id, room);\n\n    return room;\n  }\n\n  public removeRoom(id: string): void {\n    this.rooms.delete(id);\n  }\n\n  public addPlayer(player: Player) {\n    this.players.set(player.id, player);\n  }\n\n  public removePlayer(id: string) {\n    this.players.delete(id);\n  }\n\n  public checkIsRoomExists(id: string): boolean {\n    return this.rooms.has(id);\n  }\n\n  public resetVotingForRoom(roomNumber: string): void {\n    const room: Room = this.getRoom(roomNumber);\n\n    room.players.forEach((player: Player) => {\n      room.patchPlayer(player.id, {\n        card: null,\n        status: PlayerStatuses.WAITING\n      })\n    });\n  }\n\n  public getRoom(roomNumber: string): Room {\n    return this.rooms.get(roomNumber);\n  }\n\n  public findPlayerRoom(playerId: string): Room | null {\n    const roomsArray: Room[] = Array.from(this.rooms.values());\n    const foundRoom: Room = roomsArray.find((room: Room) => room.hasRoomPlayer(playerId));\n    return foundRoom || null;\n  }\n}\n","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","export enum Cards {\n  'ZERO' = 0,\n  'HALF' = '1/2',\n  'ONE' = 1,\n  'TWO' = 2,\n  'THREE' = 3,\n  'FIVE' = 5,\n  'EIGHT' = 8,\n  'THIRTEEN' = 13,\n  'TWENTY' = 20,\n  'FORTY' = 40,\n  'HUNDRED' = 100,\n  'QUESTION_MARK' = '?',\n  'COFFEE' = 'coffee',\n  'INFINITE' = 'infinite',\n}\n","export enum GameStates {\n  IN_PROGRESS = 'IN_PROGRESS',\n  REVIEW = 'REVIEW'\n}\n","export enum SocketEvents {\n  VOTE = 'VOTE',\n  PLAYERS = 'PLAYERS',\n  STATE = 'STATE',\n  JOIN = 'JOIN',\n  ROOM_JOINED = 'ROOM_JOINED',\n  LEAVE = 'LEAVE',\n  CLOSE_ROOM = 'CLOSE_ROOM',\n  ROOM_REMOVED = 'ROOM_REMOVED',\n  VOTED = 'VOTED',\n  RESULTS = 'RESULTS'\n}\n","export enum PlayerStatuses {\n  WAITING = 'WAITING',\n  VOTED = 'VOTED'\n}\n","export enum PlayerType {\n  VOTER = 'VOTER',\n  HOST = 'HOST'\n}\n","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { PokerModule } from './poker/poker.module';\n\n@Module({\n  imports: [PokerModule],\n  controllers: [AppController]\n})\nexport class AppModule {\n}\n","import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n}\n","import { Module } from '@nestjs/common';\n\nimport { PokerController } from './poker.controller';\nimport { PokerGateway } from './poker.gateway';\nimport { PokerService } from './poker.service';\n\n@Module({\n  controllers: [\n    PokerController\n  ],\n  providers: [\n    PokerGateway,\n    PokerService\n  ]\n})\nexport class PokerModule {\n}\n","import { Body, Controller, Get, Param, Post } from '@nestjs/common';\n\nimport {\n  AppInfoDtoInterface,\n  CreateRoomDto,\n  JoinRoomCodeRequestDto,\n  JoinRoomCodeResponseDto,\n  PlayerType,\n  RoomInfo\n} from '@planning-poker/api-interfaces';\n\nimport { version } from '../../../../../package.json';\nimport { PokerService } from './poker.service';\nimport { Room } from './room';\n\n@Controller()\nexport class PokerController {\n\n  constructor(private readonly pokerService: PokerService) {\n  }\n\n  @Post('create-room')\n  public createRoom(@Body() request: CreateRoomDto): RoomInfo {\n    // todo create secure http only cookie here with client id\n\n    const room: Room = this.pokerService.createRoom();\n\n    room.addPlayer({\n      id: request.clientId,\n      type: PlayerType.HOST\n    });\n\n    return {\n      id: room.id,\n      gameState: room.state\n    };\n  }\n\n  @Post('join-room-code')\n  public joinRoomCode(@Body() request: JoinRoomCodeRequestDto): JoinRoomCodeResponseDto {\n    return {\n      valid: this.pokerService.checkIsRoomExists(request.id)\n    };\n  }\n\n  @Post('room-info')\n  public roomInfo(@Body() request: JoinRoomCodeRequestDto): RoomInfo {\n    const room: Room = this.pokerService.getRoom(request.id);\n\n    return {\n      id: room.id,\n      gameState: room.state\n    };\n  }\n\n  @Get('check-player-in-room/:playerId/:roomNumber')\n  public checkPlayerInRoom(@Param('playerId') playerId: string, @Param('roomNumber') roomNumber: string): boolean {\n    const room: Room | null = this.pokerService.findPlayerRoom(playerId);\n    return room ? room.id === roomNumber : false;\n  }\n\n  @Get('check-host-of-room/:playerId/:roomNumber')\n  public checkHostOfRoom(@Param('playerId') playerId: string, @Param('roomNumber') roomNumber: string): boolean {\n    const room: Room | null = this.pokerService.getRoom(roomNumber);\n    return room ? room.host.id === playerId : false;\n  }\n\n  @Get('app-info')\n  public getAppInfo(): AppInfoDtoInterface {\n    return {\n      info: 'version ' + version\n    };\n  }\n}\n","import { BehaviorSubject } from 'rxjs';\n\nimport { GameStates, Player, PlayerType } from '@planning-poker/api-interfaces';\n\nexport class Room {\n\n  public id: string;\n  private playersMap: Map<string, Player> = new Map();\n  private stateSubject$: BehaviorSubject<GameStates> = new BehaviorSubject<GameStates>(GameStates.IN_PROGRESS);\n\n  private static generateRandomNumber(): string {\n    const calculation: number = Math.floor(Math.random() * 90000) + 10000;\n    return calculation.toString();\n  }\n\n  constructor() {\n    this.generateRoomNumber();\n  }\n\n  public get state(): GameStates {\n    return this.stateSubject$.getValue();\n  }\n\n  public set state(roomState: GameStates) {\n    this.stateSubject$.next(roomState);\n  }\n\n  public get players(): Player[] {\n    return this.allPlayersArray\n      .filter((player: Player) => player.type === PlayerType.VOTER)\n      .sort((firstPlayer: Player, secondPlayer: Player) => secondPlayer.date - firstPlayer.date);\n  }\n\n  public get host(): Player {\n    return this.allPlayersArray\n      .find((player: Player) => player.type === PlayerType.HOST);\n  }\n\n  public generateRoomNumber(): void {\n    this.id = Room.generateRandomNumber();\n  }\n\n  public addPlayer(player: Player): void {\n    this.playersMap.set(player.id, player);\n  }\n\n  public getPlayer(playerId: string): Player {\n    return this.playersMap.get(playerId);\n  }\n\n  public removePlayer(playerId: string): void {\n    this.playersMap.delete(playerId);\n  }\n\n  public patchPlayer(playerId: string, patchData: Partial<Player>): void {\n    const player: Player = this.playersMap.get(playerId);\n\n    this.playersMap.set(playerId, {\n      ...player,\n      ...patchData\n    });\n  }\n\n  public hasRoomPlayer(playerId: string): boolean {\n    return this.playersMap.has(playerId);\n  }\n\n  private get allPlayersArray(): Player[] {\n    return Array.from(this.playersMap.values())\n  }\n}\n","import {\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer\n} from '@nestjs/websockets';\nimport { Observable, of, Subject } from 'rxjs';\nimport { delay, filter, takeUntil } from 'rxjs/operators';\nimport { Server, Socket } from 'socket.io';\n\nimport {\n  GameStateBroadcastDto,\n  GameStates,\n  JoinRequestDto,\n  Player,\n  PlayerStatuses,\n  PlayerType,\n  ResultsDto,\n  SocketEvents,\n  Vote\n} from '@planning-poker/api-interfaces';\n\nimport { PokerService } from './poker.service';\nimport { Room } from './room';\n\n@WebSocketGateway()\nexport class PokerGateway implements OnGatewayConnection, OnGatewayDisconnect {\n\n  @WebSocketServer() public server: Server;\n  private clientConnectedSubject$: Subject<string> = new Subject<string>();\n\n  constructor(private pokerService: PokerService) {\n  }\n\n  public handleConnection(client: Socket): void {\n    console.log('on connect', client.id);\n    this.clientConnectedSubject$.next(client.id);\n\n    this.pokerService.addPlayer({\n      id: client.id\n    });\n  }\n\n  public handleDisconnect(client: Socket): void {\n    console.log('on disconnect', client.id);\n    const room: Room = this.pokerService.findPlayerRoom(client.id);\n\n    if (!room) {\n      return;\n    }\n\n    const player: Player = room.getPlayer(client.id);\n\n    of<string>(client.id)\n      .pipe(\n        delay(15000),\n        takeUntil(this.untilClientReconnect$(client.id))\n      )\n      .subscribe((id: string) => {\n        if (player && player.type === PlayerType.HOST) {\n          this.onHostDisconnect(room, id);\n        } else if (room) {\n          this.onPlayerDisconnect(room, id);\n        }\n      });\n  }\n\n  /**\n   * On user vote.\n   * @param client\n   * @param card\n   * @param roomNumber\n   */\n  @SubscribeMessage(SocketEvents.VOTE)\n  public onVote(client: Socket, {card, roomNumber}: Vote): void {\n    const room: Room = this.pokerService.findPlayerRoom(client.id);\n\n    if (!room || room.state === GameStates.REVIEW) {\n      return;\n    }\n\n    room.patchPlayer(client.id, {\n      card,\n      status: PlayerStatuses.VOTED\n    });\n\n    this.emitPlayerVoted(room, client.id);\n  }\n\n  /**\n   * On host change game state.\n   * @param client\n   * @param roomNumber\n   */\n  @SubscribeMessage(SocketEvents.STATE)\n  public onState(client: Socket, roomNumber: string): void {\n    this.pokerService.toggleRoomGameState(roomNumber);\n    const state: GameStates = this.pokerService.getRoomGameState(roomNumber);\n    const broadcastMessage: GameStateBroadcastDto = {\n      state\n    };\n\n    this.serverEmitTo(roomNumber, SocketEvents.STATE, broadcastMessage);\n\n    if (state === GameStates.IN_PROGRESS) {\n      this.pokerService.resetVotingForRoom(roomNumber);\n    } else {\n      this.emitResultsToRoom(roomNumber);\n    }\n  }\n\n  /**\n   * On user join to room.\n   * @param client\n   * @param message\n   */\n  @SubscribeMessage(SocketEvents.JOIN)\n  public onJoin(client: Socket, message: JoinRequestDto): void {\n    const roomNumber: string = message.room;\n    const room: Room = this.pokerService.getRoom(roomNumber);\n\n    room.addPlayer({\n      id: client.id,\n      name: message.name,\n      type: message.type\n    });\n\n    client.join(roomNumber);\n    this.emitPlayersChangeToRoom(roomNumber);\n  }\n\n  /**\n   * On player leave room.\n   * @param client\n   */\n  @SubscribeMessage(SocketEvents.LEAVE)\n  public onLeave(client: Socket): void {\n    const room: Room = this.pokerService.findPlayerRoom(client.id);\n\n    if (!room) {\n      return;\n    }\n\n    client.leave(room.id);\n    room.removePlayer(client.id);\n    this.emitPlayersChangeToRoom(room.id);\n  }\n\n  /**\n   * On host close room.\n   * @param client\n   * @param roomNumber\n   */\n  @SubscribeMessage(SocketEvents.CLOSE_ROOM)\n  public onCloseRoom(client: Socket, roomNumber: string): void {\n    this.removeRoom(roomNumber);\n  }\n\n  public emitPlayersChangeToRoom(roomNumber: string): void {\n    const room: Room = this.pokerService.getRoom(roomNumber);\n\n    if (!room) {\n      return;\n    }\n\n    const players: Player[] = room.players\n      .map((player: Player) => {\n        return {\n          id: player.id,\n          name: player.name\n        };\n      });\n\n    this.serverEmitTo(roomNumber, SocketEvents.PLAYERS, {players});\n  }\n\n  @SubscribeMessage(SocketEvents.ROOM_JOINED)\n  public onRoomJoined(client: Socket): void {\n    const room: Room = this.pokerService.findPlayerRoom(client.id);\n\n    if (room.state === GameStates.REVIEW) {\n      const results: ResultsDto = this.getRoomResults(room.id);\n      this.serverEmitTo<ResultsDto>(client.id, SocketEvents.RESULTS, results);\n    }\n  }\n\n  public emitResultsToRoom(roomNumber: string): void {\n    const results: ResultsDto = this.getRoomResults(roomNumber);\n    this.serverEmitTo<ResultsDto>(roomNumber, SocketEvents.RESULTS, results);\n  }\n\n  private getRoomResults(roomNumber: string): ResultsDto {\n    const room: Room = this.pokerService.getRoom(roomNumber);\n\n    const results: ResultsDto = {};\n\n    room.players.forEach((player: Player) => {\n      results[player.id] = {\n        card: player.card,\n        name: player.name\n      };\n    });\n\n    return results;\n  }\n\n  private serverEmitTo<T>(roomNumber: string, socketEvent: SocketEvents, payload?: T): boolean {\n    return this.server.to(roomNumber).emit(socketEvent, payload);\n  }\n\n  private removeRoom(roomNumber: string) {\n    this.pokerService.removeRoom(roomNumber);\n    this.emitRoomRemoved(roomNumber);\n  }\n\n  private emitRoomRemoved(roomNumber: string): void {\n    this.serverEmitTo(roomNumber, SocketEvents.ROOM_REMOVED);\n  }\n\n  private emitPlayerVoted(room: Room, clientId: string): void {\n    this.server.to(room.host.id).emit(SocketEvents.VOTED, clientId);\n  }\n\n  private onHostDisconnect(room: Room, id: string) {\n    this.removeRoom(room.id);\n    this.pokerService.removePlayer(id);\n    this.emitPlayersChangeToRoom(id);\n  }\n\n  private onPlayerDisconnect(room: Room, id: string) {\n    room.removePlayer(id);\n\n    this.pokerService.removePlayer(id);\n    this.emitPlayersChangeToRoom(room.id);\n  }\n\n  private untilClientReconnect$(clientId: string): Observable<string> {\n    return this.clientConnectedSubject$\n      .pipe(\n        filter((id: string) => id === clientId)\n      );\n  }\n}\n","import {ArgumentsHost, Catch, ExceptionFilter, HttpException, NotFoundException} from '@nestjs/common';\nimport * as path from 'path';\n\n@Catch(NotFoundException)\nexport class NotFoundExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    response.sendFile(path.resolve('./public/index.html'));\n  }\n}\n","module.exports = require(\"path\");","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport { NotFoundExceptionFilter } from './frontend-redirect';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  app.useGlobalFilters(new NotFoundExceptionFilter());\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"sourceRoot":""}